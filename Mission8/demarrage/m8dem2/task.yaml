#   Copyright (c) 2015 Olivier Bonaventure, François Michel, Clémentine Munyabarenzi
#   This program is free software: you can redistribute it and/or modify
#   it under the terms of the GNU General Public License as published by
#   the Free Software Foundation, either version 3 of the License, or
#   (at your option) any later version.
#
#   This program is distributed in the hope that it will be useful,
#   but WITHOUT ANY WARRANTY; without even the implied warranty of
#   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#   GNU General Public License for more details.
#
#   You should have received a copy of the GNU General Public License
#   along with this program.  If not, see <http://www.gnu.org/licenses/>.



accessible: true
author: François MICHEL
context: |-
    En Java, concaténer des ``String`` avec l'opérateur ``+`` implique la création et la desctruction successive d'un grand nombre de ``String``. On utilise en général un ``StringBuffer`` (http://docs.oracle.com/javase/7/docs/api/java/lang/StringBuffer.html) pour éviter ce problème. En utilisant l'API de la classe ``StringBuffer``, implémentez le corps de la méthode ``repeat()`` qui permet de répéter un ``String`` un certain nombre de fois. Voici la signature de cette méthode :

    .. code-block:: java

        /**
         *    @pre    -
         *    @post    retourne le String s
         *             répété n fois. Si s == null || n == 0, retourne null.
         */
        public static String repeat(String s, int n){
            // À implémenter
        }
environment: java7
limits:
    memory: '100'
    time: '30'
    output: '2'
name: 'Mission 8: Question de démarrage 2: StringBuffer'
problems:
    q1:
        language: Java
        name: La méthode repeat
        type: code
        header: Implémentez ici le corps de la méthode repeat. Veillez à bien respecter
            les spécifications.
weight: 1.0
