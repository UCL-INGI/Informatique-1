#   Copyright (c) 2015, 2016 Sébastien Combéfis, Virginie Van den Schrieck
#   This program is free software: you can redistribute it and/or modify
#   it under the terms of the GNU Affero General Public License as published by
#   the Free Software Foundation, either version 3 of the License, or
#   (at your option) any later version.
#
#   This program is distributed in the hope that it will be useful,
#   but WITHOUT ANY WARRANTY; without even the implied warranty of
#   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#   GNU Affero General Public License for more details.
#
#   You should have received a copy of the GNU Affero General Public License
#   along with this program.  If not, see <http://www.gnu.org/licenses/>.



author: Sébastien Combéfis
context: |+
    .. raw:: html

        <p>
          Complétez ici le corps de la classe <code>Stack</code> qui doit implémenter l'interface <code>StackIF.java</code>. Vous devez mettre un constructeur qui ne prend aucun paramètre.
        </p>
        <p>
          Pour rappel, voici l'interface <code>StackIF</code> :
        </p>
        <pre class="code">
        public interface StackIF
        {
           /**
            * @pre c != null
            * @post L'état c a été ajouté au sommet de cette pile
            */
           public void push (State c);

           /**
            * @pre -
            * @post La valeur renvoyée contient l'état se trouvant au sommet
            *       de cette pile. Cet état est par ailleurs retiré de cette pile.
            *       Si cette pile est vide, génère une EmptyStackException.
            */
           public State pop() throws EmptyStackException;

           /**
            * @pre -
            * @post La valeur renvoyée contient le nombre d'éléments de cette pile.
            */
           public int size();

           /**
            * @pre -
            * @post La valeur renvoyée contient true si cette pile est vide,
            *       et false sinon.
            */
           public boolean isEmpty();

           /**
            * @pre 0 &lt;= n &lt; size()
            * @post La valeur renvoyée contient le n-ième élément de cette pile,
            *       l'élément au sommet étant celui d'indice 0.
            */
           public State peek (int n);
        }
        </pre>

responseIsHTML: true
order: 74
accessible: false
name: 'Mission 11: Structures chainées'
problems:
    q1:
        header: |+
            .. raw:: html

                <p class='lead'></p>
                <p>
                  Complétez le corps de la classe suivante (vous ne devez pas mettre les accolades de la classe).
                </p>public class Stack implements StackIF

        type: code
        multiple: true
        language: java
limits:
    language: java
    time: 30
    memory: 32
    disk: 50
    output: 5210
environment: pythia0compat
